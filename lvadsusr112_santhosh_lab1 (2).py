# -*- coding: utf-8 -*-
"""LVADSUSR112_Santhosh_lab1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e2VV8GTeMMJZXY1bonxcGP2RElfBGO-z
"""

#LAB 1
import pandas as pd
import matplotlib.pyplot as plt
data=pd.read_csv('/content/loan_approval.csv')

#Removing null and dupliactes
data.isnull().sum()
data.duplicated().sum()

#Outlier detection
data.info()
print(data.describe())

data.plot(kind='box')
plt.xticks(rotation=90)
plt.show()

for column in data.describe():
  data[column].plot(kind='hist')
  plt.xlabel(column)
  plt.show()

values=data.describe()
Q1=values.loc['25%']
Q3=values.loc['75%']
upper_bound=Q3+(Q3-Q1)*1.5
lower_bound=Q1-(Q3-Q1)*1.5
outlier=[]
for index in Q1.index:
  number=len(data[(data[index]>upper_bound[index])|(data[index]<lower_bound[index])])
  if number>0:
    outlier.append([index,number])
print(outlier)

#Model Building

from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import LabelEncoder
from sklearn.decomposition import PCA
from sklearn.metrics import accuracy_score,classification_report
from sklearn.model_selection import cross_val_score,StratifiedKFold

LE=LabelEncoder()
#Approved 0 Rejected 1
data['loan_status_val']=LE.fit_transform(data[' loan_status'])
data['emp_val']=LE.fit_transform(data[' self_employed'])
data['education_val']=LE.fit_transform(data[' education'])

data.corr()['loan_status_val']
data.corr()[' cibil_score']
data.corr()[' income_annum']
data.corr()[' loan_amount']

pca=PCA(n_components=1)
decomp1=pca.fit_transform(data[[' income_annum',' loan_amount']])
comparison=pd.DataFrame()
comparison['cibil_score']=data[' cibil_score']
comparison['income_loan']=decomp1

RFC=RandomForestClassifier()
SKF=StratifiedKFold(n_splits=5)

result=cross_val_score(RFC,comparison,data['loan_status_val'],cv=SKF)
print('The Model was able to process the applications to an accuracy of {:.2f}%.'.format(result.mean()*100))